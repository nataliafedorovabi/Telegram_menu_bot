from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackContext, MessageHandler, filters, ConversationHandler, CallbackQueryHandler

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
WEIGHT, HEIGHT, AGE, ACTIVITY, GOAL = range(5)

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: CallbackContext):
    keyboard = ReplyKeyboardMarkup([["–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]], resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –º–µ–Ω—é –∏–º–µ–Ω–Ω–æ –ø–æ–¥ —Ç–µ–±—è üòä",
        reply_markup=keyboard
    )
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥):")
    return WEIGHT

async def get_weight(update: Update, context: CallbackContext):
    try:
        context.user_data['weight'] = int(update.message.text)
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–≤–∞—à –≤–µ—Å –≤ –∫–≥):")
        return WEIGHT
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–º):")
    return HEIGHT

async def get_height(update: Update, context: CallbackContext):
    try:
        context.user_data['height'] = int(update.message.text)
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–≤–∞—à —Ä–æ—Å—Ç –≤ —Å–º):")
        return HEIGHT
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
    return AGE

async def get_age(update: Update, context: CallbackContext):
    try:
        context.user_data['age'] = int(update.message.text)
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç):")
        return AGE
    keyboard = [
        [InlineKeyboardButton("1.2 - –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è", callback_data="1.2")],
        [InlineKeyboardButton("1.3 - –ù–∏–∑–∫–∞—è", callback_data="1.3")],
        [InlineKeyboardButton("1.38 - –°—Ä–µ–¥–Ω—è—è", callback_data="1.38")],
        [InlineKeyboardButton("1.43 - –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ", callback_data="1.43")],
        [InlineKeyboardButton("1.55 - –í—ã—Å–æ–∫–∞—è", callback_data="1.55")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:", reply_markup=reply_markup)
    return ACTIVITY

async def get_activity(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    context.user_data['activity'] = float(query.data)
    keyboard = [
        [InlineKeyboardButton("–ü–æ—Ö—É–¥–µ—Ç—å", callback_data="–ü–æ—Ö—É–¥–µ—Ç—å"), InlineKeyboardButton("–£–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–µ—Å", callback_data="–£–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–µ—Å")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text("–ö–∞–∫–æ–≤–∞ –≤–∞—à–∞ —Ü–µ–ª—å?", reply_markup=reply_markup)
    return GOAL

async def get_goal(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    goal = query.data
    weight = context.user_data['weight']
    height = context.user_data['height']
    age = context.user_data['age']
    activity = context.user_data['activity']

    # –†–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π
    base_cal = (655.1 + (9.563 * weight) + (2.35 * height) - (4.676 * age)) * activity
    if goal.lower() == "–ø–æ—Ö—É–¥–µ—Ç—å":
        base_cal *= 0.75

    calories = int(round(base_cal / 100) * 100)
    calories = max(1100, min(1900, calories))

    buy_url = f"https://orlowa.ru/calculator/{calories}"
    button = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ö—É–ø–∏—Ç—å", url=buy_url)]
    ])
    keyboard = ReplyKeyboardMarkup([["–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]], resize_keyboard=True)

    await query.edit_message_text(
        f"–í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç {calories} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –º–µ–Ω—é:",
        reply_markup=button
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ—Å—Ç–∞—Ä—Ç–∞
    await context.bot.send_message(
        chat_id=query.message.chat_id,
        text="–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )
    return ConversationHandler.END

async def restart(update: Update, context: CallbackContext):
    context.user_data.clear()
    keyboard = ReplyKeyboardMarkup([["–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]], resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –º–µ–Ω—é –∏–º–µ–Ω–Ω–æ –ø–æ–¥ —Ç–µ–±—è üòä",
        reply_markup=keyboard
    )
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥):")
    return WEIGHT

async def cancel(update: Update, context: CallbackContext):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω.")
    return ConversationHandler.END

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
def main():
    TOKEN = "1630388281:AAEm6i0PQOzDYWqE4Plpie5DmMuj4qWOgwk"
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            WEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_weight)],
            HEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_height)],
            AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_age)],
            ACTIVITY: [CallbackQueryHandler(get_activity)],
            GOAL: [CallbackQueryHandler(get_goal)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.add_handler(MessageHandler(filters.Text("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"), restart))

    import os
    PORT = int(os.environ.get('PORT', 8443))
    WEBHOOK_PATH = f"/{TOKEN}"
    WEBHOOK_URL = f"https://telegram-menu-bot-lqrj.onrender.com/{TOKEN}"
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_path=WEBHOOK_PATH,
        webhook_url=WEBHOOK_URL
    )

if __name__ == "__main__":
    main()
