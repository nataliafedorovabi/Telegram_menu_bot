# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–∏
async def get_goal(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    goal = query.data
    weight = context.user_data['weight']
    height = context.user_data['height']
    age = context.user_data['age']
    activity = context.user_data['activity']

    base_cal = (655.1 + (9.563 * weight) + (2.35 * height) - (4.676 * age)) * activity
    if goal.lower() == "–ø–æ—Ö—É–¥–µ—Ç—å":
        base_cal *= 0.75

    calories = int(round(base_cal / 100) * 100)
    calories = max(1100, min(1900, calories))

    buy_url = f"https://orlowa.ru/calculator/{calories}"
    button = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ö—É–ø–∏—Ç—å", url=buy_url)]
    ])
    restart_inline = InlineKeyboardMarkup([
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")]
    ])

    # –î–û–ë–ê–í–õ–ï–ù–û: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –ø–∞–ø–∫–∏
    # –î–û–ë–ê–í–õ–ï–ù–û: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –ø–∞–ø–∫–∏
folder_path = f"menus/{calories}"
if os.path.exists(folder_path):
    await context.bot.send_message(
        chat_id=query.message.chat_id,
        text=f"–í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç {calories} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –û—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–æ–±–Ω–æ–µ –º–µ–Ω—é –Ω–∞ 7 –¥–Ω–µ–π:"
    )
    files_sent = 0
    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if os.path.isfile(file_path):
            try:
                await context.bot.send_document(
                    chat_id=query.message.chat_id,
                    document=open(file_path, "rb")
                )
                files_sent += 1
                if files_sent >= 3:
                    break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")
else:
    await context.bot.send_message(
        chat_id=query.message.chat_id,
        text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–µ–Ω—é –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ."
    )

# –î–û–ë–ê–í–õ–ï–ù–û: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥—Ä—É–≥–∏—Ö –æ–¥–∏–Ω–æ—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ menus/
menus_folder = "menus"
other_files_sent = 0
for item in os.listdir(menus_folder):
    file_path = os.path.join(menus_folder, item)
    if os.path.isfile(file_path):
        try:
            await context.bot.send_document(
                chat_id=query.message.chat_id,
                document=open(file_path, "rb")
            )
            other_files_sent += 1
            if other_files_sent >= 3:
                break
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")

# –î–û–ë–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –ö—É–ø–∏—Ç—å
await context.bot.send_message(
    chat_id=query.message.chat_id,
    text="–ú–µ–Ω—é –Ω–∞ 30 –¥–Ω–µ–π –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
    reply_markup=button
)

# –ü–µ—Ä–µ–Ω–æ—Å –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
await context.bot.send_message(
    chat_id=query.message.chat_id,
    text="–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
    reply_markup=restart_inline
)

    return ConversationHandler.END
